---

- name: Create empty secret list
  set_fact:
    secret_list: []

- name: Set Route TLS Secret Name
  set_fact:
    route_tls_secret_name: "{{ awx_spec['route_tls_secret'] }}"
  when: awx_spec['route_tls_secret'] is defined

- name: Set LDAP CA Cert Secret Name
  set_fact:
    ldap_cacert_secret_name: "{{ awx_spec['ldap_cacert_secret'] }}"
  when: awx_spec['ldap_cacert_secret'] is defined

- name: Set Image Pull Secret Name
  set_fact:
    image_pull_secret_name: "{{ awx_spec['image_pull_secret'] }}"
  when: awx_spec['image_pull_secret'] is defined

- name: Create Temporary secrets file
  tempfile:
    state: file
    suffix: .yml
  register: tmp_secrets

- name: Dump secret names and data into file
  include_tasks: dump_secret.yml
  with_items:
    - "{{ this_awx['resources'][0]['status']['secretKeySecret'] }}"
    - "{{ this_awx['resources'][0]['status']['adminPasswordSecret'] }}"
    - "{{ this_awx['resources'][0]['status']['broadcastWebsocketSecret'] }}"
    - "{{ this_awx['resources'][0]['status']['postgresConfigurationSecret'] }}"
    - "{{ route_tls_secret_name | default('') }}"
    - "{{ ldap_cacert_secret_name | default('') }}"
    - "{{ image_pull_secret_name | default('') }}"

- name: Write secret dump to tempfile
  copy: 
    content: "{{ secret_list }}"
    dest: "{{ tmp_secrets.path }}"

# - set_fact: 
#     _output: "{{ lookup('file', tmp_secrets.path) }}"

- name: Nest dict to simplify restore-time include  
  set_fact:
    secrets: { "secrets": '{{ secret_list}}' }

- name: Write postgres configuration to pvc
  k8s_exec:
    namespace: "{{ backup_pvc_namespace }}"
    pod: "{{ meta.name }}-db-management"
    command: >-
      bash -c "echo '{{ secrets | to_yaml }}' > {{ backup_dir }}/secrets.yml"

# - shell: |
#     bash -c "echo '{{ secrets | to_yaml }}' > secret_list.txt"
